//
// Generated by Bluespec Compiler, version 2022.01-36-ga6304315 (build a6304315)
//
// On Tue Oct  4 10:37:07 CEST 2022
//
//
// Ports:
// Name                         I/O  size props
// inputs                         O    74
// RDY_inputs                     O     1 const
// CLK                            I     1 unused
// RST_N                          I     1 unused
// inputs_fn                      I     4
// inputs_op1                     I    32
// inputs_op2                     I    32
// inputs_op3                     I    32
// inputs_imm_value               I    32
// inputs_inst_type               I     3
// inputs_funct3                  I     3
// inputs_memaccess               I     2
// inputs_misa_c                  I     1
// inputs_lpc                     I     2
// EN_inputs                      I     1 unused
//
// Combinational paths from inputs to outputs:
//   (inputs_fn,
//    inputs_op1,
//    inputs_op2,
//    inputs_op3,
//    inputs_imm_value,
//    inputs_inst_type,
//    inputs_funct3,
//    inputs_memaccess,
//    inputs_misa_c,
//    inputs_lpc) -> inputs
//
//

`ifdef BSV_ASSIGNMENT_DELAY
`else
  `define BSV_ASSIGNMENT_DELAY
`endif

`ifdef BSV_POSITIVE_RESET
  `define BSV_RESET_VALUE 1'b1
  `define BSV_RESET_EDGE posedge
`else
  `define BSV_RESET_VALUE 1'b0
  `define BSV_RESET_EDGE negedge
`endif

module mkalu(CLK,
	     RST_N,

	     inputs_fn,
	     inputs_op1,
	     inputs_op2,
	     inputs_op3,
	     inputs_imm_value,
	     inputs_inst_type,
	     inputs_funct3,
	     inputs_memaccess,
	     inputs_misa_c,
	     inputs_lpc,
	     EN_inputs,
	     inputs,
	     RDY_inputs);
  input  CLK;
  input  RST_N;

  // actionvalue method inputs
  input  [3 : 0] inputs_fn;
  input  [31 : 0] inputs_op1;
  input  [31 : 0] inputs_op2;
  input  [31 : 0] inputs_op3;
  input  [31 : 0] inputs_imm_value;
  input  [2 : 0] inputs_inst_type;
  input  [2 : 0] inputs_funct3;
  input  [1 : 0] inputs_memaccess;
  input  inputs_misa_c;
  input  [1 : 0] inputs_lpc;
  input  EN_inputs;
  output [73 : 0] inputs;
  output RDY_inputs;

  // signals for module outputs
  wire [73 : 0] inputs;
  wire RDY_inputs;

  // rule scheduling signals
  wire CAN_FIRE_inputs, WILL_FIRE_inputs;

  // actionvalue method inputs
  module_fn_alu instance_fn_alu_0(.fn_alu_fn(inputs_fn),
				  .fn_alu_op1(inputs_op1),
				  .fn_alu_op2(inputs_op2),
				  .fn_alu_op3(inputs_op3),
				  .fn_alu_imm_value(inputs_imm_value),
				  .fn_alu_inst_type(inputs_inst_type),
				  .fn_alu_funct3(inputs_funct3),
				  .fn_alu_memaccess(inputs_memaccess),
				  .fn_alu_misa_c(inputs_misa_c),
				  .fn_alu_lpc(inputs_lpc),
				  .fn_alu(inputs));
  assign RDY_inputs = 1'd1 ;
  assign CAN_FIRE_inputs = 1'd1 ;
  assign WILL_FIRE_inputs = EN_inputs ;
endmodule  // mkalu

